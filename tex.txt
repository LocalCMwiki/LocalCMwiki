import axios from "axios";
const base = "https://localcmwiki.com";

export default {
  // Global page headers: https://go.nuxtjs.dev/config-head
  head: {
    title: "LocalCMwiki",
    htmlAttrs: {
      lang: "en",
    },
    meta: [
      { charset: "utf-8" },
      { name: "viewport", content: "width=device-width, initial-scale=1" },
      { hid: "description", name: "description", content: "" },
      { name: "format-detection", content: "telephone=no" },
    ],
    link: [{ rel: "icon", type: "image/x-icon", href: "/favicon.ico" }],
  },

  // Global CSS: https://go.nuxtjs.dev/config-css
  css: [
    "~assets/css/style.css",
    "~assets/css/layout.css",
    "~assets/css/wiki.css",
  ],

  // Plugins to run before rendering page: https://go.nuxtjs.dev/config-plugins
  plugins: [],

  // Auto import components: https://go.nuxtjs.dev/config-components
  components: true,

  // Modules for dev and build (recommended): https://go.nuxtjs.dev/config-modules
  buildModules: [],

  // Modules: https://go.nuxtjs.dev/config-modules
  modules: [
    // https://go.nuxtjs.dev/buefy
    "nuxt-buefy",
    "@nuxtjs/sitemap",
    "@nuxtjs/axios",
    [
      "@nuxtjs/firebase",
      {
        config: {
          apiKey: process.env.NUXT_ENV_API_KEY,
          authDomain: process.env.NUXT_ENV_AUTH_DOMAIN,
          projectId: process.env.NUXT_ENV_PROJECT_ID,
          storageBucket: process.env.NUXT_ENV_STORAGE_BUCKET,
          messagingSenderId: process.env.NUXT_ENV_MESSAGING_SENDER_ID,
          appId: process.env.NUXT_ENV_API_ID,
          measurementId: process.env.NUXT_ENV_MEASUREMENT_ID,
        },
        services: {
          auth: true, // Just as example. Can be any other service.
        },
      },
    ],
  ],

  // Build Configuration: https://go.nuxtjs.dev/config-build
  build: {},

  sitemap: {
    path: "/sitemap.xml",
    hostname: base,
    exclude: ["/create", "/edit/*", "/maintenance", "/list/*", "/backup/*"],
    routes: async () => {
      const res = await axios.get(process.env.NUXT_ENV_SITE_MAP);
      return res.documents.fields.map((info) => "/page/" + info.id);
    },
  },
};
